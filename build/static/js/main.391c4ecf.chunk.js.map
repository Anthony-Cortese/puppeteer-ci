{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Home","className","About","Login","useState","isUserLoggedIn","setIsUserLoggedIn","error","setError","email","setEmail","password","setPassword","onSubmit","event","preventDefault","setTimeout","type","required","placeholder","onChange","e","target","value","App","path","element","id","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAIA,SAASA,IACP,OACE,mBAAGC,UAAU,mBAAb,SACE,0DAKN,SAASC,IACP,OAAO,mBAAGD,UAAU,mBAAb,qCAGT,SAASE,IACP,MAA4CC,oBAAS,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KAiBA,OACE,qBAAKX,UAAU,MAAf,SACE,sBAAKA,UAAU,eAAf,UACE,mBAAGA,UAAU,mBAAb,qCACA,oBAAIA,UAAU,cAAd,yBACEI,GACA,uBAAMJ,UAAU,OAAOY,SArBjB,SAACC,GACbA,EAAMC,iBAEQ,uBAAVN,GAA+C,aAAbE,EACpCL,GAAkB,IAElBA,GAAkB,GAClBE,GAAS,GAETQ,YAAW,WACTR,GAAS,KACR,QAUC,UACGD,GACC,mBAAGN,UAAU,kBAAb,uDAKF,uBACEgB,KAAK,QACLC,UAAQ,EACRC,YAAY,gBACZlB,UAAU,+BACVmB,SAAU,SAACC,GACTX,EAASW,EAAEC,OAAOC,UAGtB,uBACEN,KAAK,WACLC,UAAQ,EACRC,YAAY,WACZlB,UAAU,kCACVmB,SAAU,SAACC,GACTT,EAAYS,EAAEC,OAAOC,UAIzB,wBAAQN,KAAK,SAAShB,UAAU,qBAAhC,uBAKHI,GACC,mBAAGJ,UAAU,uBAAb,yCAqCKuB,MA9Bf,WACE,OACE,cAAC,IAAD,UACE,qBAAKvB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwB,KAAK,SAASC,QAAS,cAACxB,EAAD,MAE9B,cAAC,IAAD,CAAOuB,KAAK,SAASC,QAAS,cAACvB,EAAD,MAE9B,cAAC,IAAD,CAAOsB,KAAK,IAAIC,QAAS,cAAC1B,EAAD,SAG3B,sBAAKC,UAAU,mBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,WAAW0B,GAAG,iBAAiBC,GAAG,IAAlD,kBAGA,cAAC,IAAD,CAAM3B,UAAU,WAAW0B,GAAG,kBAAkBC,GAAG,SAAnD,mBAGA,cAAC,IAAD,CAAM3B,UAAU,WAAW0B,GAAG,kBAAkBC,GAAG,SAAnD,8BC1FGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.391c4ecf.chunk.js","sourcesContent":["import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport \"./App.css\";\n\nfunction Home() {\n  return (\n    <p className=\"App-welcome-text\">\n      <code>This is the HomePage</code>\n    </p>\n  );\n}\n\nfunction About() {\n  return <p className=\"App-welcome-text\">This is the about page.</p>;\n}\n\nfunction Login() {\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  const [error, setError] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = (event) => {\n    event.preventDefault();\n\n    if (email === \"username@gmail.com\" && password === \"password\") {\n      setIsUserLoggedIn(true);\n    } else {\n      setIsUserLoggedIn(false);\n      setError(true);\n\n      setTimeout(() => {\n        setError(false);\n      }, 12000);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"form-wrapper\">\n        <p className=\"App-welcome-text\">This is the Login page.</p>\n        <h1 className=\"form-header\">Login form</h1>\n        {!isUserLoggedIn && (\n          <form className=\"form\" onSubmit={login}>\n            {error && (\n              <p className=\"form-error-text\">\n                Please enter a correct username/password.\n              </p>\n            )}\n\n            <input\n              type=\"email\"\n              required\n              placeholder=\"Email Address\"\n              className=\"form-input form-input__email\"\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n            <input\n              type=\"password\"\n              required\n              placeholder=\"Password\"\n              className=\"form-input form-input__password\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n\n            <button type=\"submit\" className=\"form-submit-button\">\n              Submit\n            </button>\n          </form>\n        )}\n        {isUserLoggedIn && (\n          <p className=\"form-success-message\">You are now signed in.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Routes>\n            <Route path=\"/about\" element={<About />} />\n\n            <Route path=\"/login\" element={<Login />} />\n\n            <Route path=\"/\" element={<Home />} />\n          </Routes>\n\n          <div className=\"App-link-wrapper\">\n            <Link className=\"App-link\" id=\"home-page-link\" to=\"/\">\n              Home\n            </Link>\n            <Link className=\"App-link\" id=\"about-page-link\" to=\"/about\">\n              About\n            </Link>\n            <Link className=\"App-link\" id=\"login-page-link\" to=\"/login\">\n              Login\n            </Link>\n          </div>\n        </header>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}